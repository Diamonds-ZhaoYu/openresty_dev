# Copyright (C) 2017 by chrono

server {
    listen 80
        backlog=4096
        deferred
        reuseport
        fastopen=1024   # Old linux kernel may not support this
        #http2
        ;

    server_name  localhost;

    access_log  logs/http_access.log
                main buffer=2k flush=1s;

    allow 127.0.0.1;
    deny all;

    default_type text/html;

    set $new_log_var    "";

    location ~ /echo {
        content_by_lua_file service/http/echo.lua;

        header_filter_by_lua_file service/http/header_filter.lua;
        body_filter_by_lua_file service/http/body_filter.lua;
    }

    location ~ ^/(\w+) {
        #access_by_lua_file service/xxx.lua;

        content_by_lua_file service/http/$1.lua;

        #log_by_lua_file service/xxx.lua;
    }

    location = /filter {
        header_filter_by_lua_block {
            if ngx.header.etag then
                ngx.header.etag = nil
            end
            ngx.header["Cache-Control"] = "max-age=300"
            ngx.header.content_length = nil
        }

        content_by_lua_block {
            ngx.say('openresty')
        }

        body_filter_by_lua_block {
            if ngx.re.find(ngx.arg[1], 'xxx', "jo") then
                ngx.arg[1] = nil
                --ngx.arg[2] = true
                return
            end

            if ngx.arg[2] then
                ngx.arg[1] = ngx.arg[1] .. '<footer>'
            end
        }
    }

    # curl 127.1/exec
    location = /exec {
        rewrite_by_lua_block {
            --ngx.redirect("https://www.github.com")
            --ngx.redirect("/new_path", 301)
            ngx.req.set_header("Exec", "True")
            ngx.exec("/filter", ngx.var.args)
        }
    }

    # curl 127.1/example
    # curl 127.1/example -d '1516765407'
    # curl '127.1/example?need_encode=1' -d '1516765407'
    location = /example {
        access_by_lua_file service/http/access_example.lua;
        rewrite_by_lua_file service/http/rewrite_example.lua;
        content_by_lua_file service/http/content_example.lua;
        body_filter_by_lua_file service/http/body_filter_example.lua;
    }

    location /gc {
        content_by_lua_block {
            ngx.say(string.format("GC: %dKB", collectgarbage("count")))
        }
    }

    location / {
        #deny all;

        content_by_lua_block {
            ngx.say("hello openresty")
        }
    }
}

